name: PHP Composer

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  get-composer:
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - name: Install Composer script
        run: |
          apk add --no-cache gnupg
          curl -LfSsO "https://getcomposer.org/download/latest-2.x/composer.phar"
          curl -LfSsO "https://getcomposer.org/download/latest-2.x/composer.phar.asc"
          gpg --receive-keys 161DFBE342889F01DDAC4E61CBB3D576F2A0946F
          gpg --verify composer.phar.asc
          install -m 0755 composer.phar ./composer
          rm -f composer.phar*
      - name: Cache Composer script
        uses: actions/cache/save@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2

  validate:
    needs:
      - get-composer
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Restore Composer script
        uses: actions/cache/restore@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2
      - name: Validate composer.json and composer.lock
        run: './composer validate --strict'

  install-dependencies:
    needs:
      - validate
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Restore Composer script
        uses: actions/cache/restore@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php-version }}
      - name: Install dependencies
        run: './composer install --no-interaction --optimize-autoloader'

  test:
    needs:
      - get-composer
      - install-dependencies
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Restore Composer script
        uses: actions/cache/restore@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2
      - name: Restore Composer packages
        id: composer-cache
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php-version }}
      - name: Run test suite
        run: './composer run-script tester'

  phpmd:
    needs:
      - get-composer
      - install-dependencies
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Restore Composer script
        uses: actions/cache/restore@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2
      - name: Restore Composer packages
        id: composer-cache
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php-version }}
      - name: Run phpmd
        run: './composer run-script phpmd'

  phpcs:
    needs:
      - get-composer
      - install-dependencies
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Restore Composer script
        uses: actions/cache/restore@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2
      - name: Restore Composer packages
        id: composer-cache
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php-version }}
      - name: Run phpcs
        run: './composer run-script phpcs'

  phpstan:
    needs:
      - get-composer
      - install-dependencies
    strategy:
      matrix:
        php-version:
          - '8.1'
          - '8.2'
    runs-on: ubuntu-22.04
    container:
      image: php:${{ matrix.php-version }}-alpine
    steps:
      - uses: actions/checkout@v3
      - name: Restore Composer script
        uses: actions/cache/restore@v3
        with:
          path: ./composer
          key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-2
      - name: Restore Composer packages
        id: composer-cache
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php-version }}
      - name: Run phpstan
        run: './composer run-script phpstan'
